namespace Aardvark.Base

type V2i(x : int, y : int) = 
    member __.X = x
    member __.Y = y
    member x.XX = V2i(x, x)
    member x.XY = V2i(x, y)
    member x.YX = V2i(y, x)
    member x.YY = V2i(y, y)
    static member Zero = V2i(0, 0)
    static member One = V2i(1, 1)
    static member OO = V2i(0, 0)
    static member OI = V2i(0, 1)
    static member IO = V2i(1, 0)
    static member II = V2i(1, 1)
    static member (~-) (v : V2i) = V2i(-v.X, -v.Y)
    static member (+) (l : V2i, r : V2i) = V2i(l.X + r.X, l.Y + r.Y)
    static member (-) (l : V2i, r : V2i) = V2i(l.X - r.X, l.Y - r.Y)
    static member (*) (l : V2i, r : V2i) = V2i(l.X * r.X, l.Y * r.Y)
    static member (/) (l : V2i, r : V2i) = V2i(l.X / r.X, l.Y / r.Y)
    static member (*) (l : V2i, r : int) = V2i(l.X * r, l.Y * r)
    static member (/) (l : V2i, r : int) = V2i(l.X / r, l.Y / r)
    static member (*) (l : int, r : V2i) = V2i(l * r.X, l * r.Y)
    static member (/) (l : int, r : V2i) = V2i(l / r.X, l / r.Y)
    static member Dot(l : V2i, r : V2i) = l.X * r.X + l.Y * r.Y
    member __.Dot(r : V2i) = x * r.X + y * r.Y
    member __.LengthSquared = x*x + y*y
    member __.Length = sqrt (float (x*x + y*y))
type V3i(x : int, y : int, z : int) = 
    member __.X = x
    member __.Y = y
    member __.Z = z
    member x.XX = V2i(x, x)
    member x.XY = V2i(x, y)
    member x.XZ = V2i(x, z)
    member x.YX = V2i(y, x)
    member x.YY = V2i(y, y)
    member x.YZ = V2i(y, z)
    member x.ZX = V2i(z, x)
    member x.ZY = V2i(z, y)
    member x.ZZ = V2i(z, z)
    member x.XXX = V3i(x, x, x)
    member x.XXY = V3i(x, x, y)
    member x.XXZ = V3i(x, x, z)
    member x.XYX = V3i(x, y, x)
    member x.XYY = V3i(x, y, y)
    member x.XYZ = V3i(x, y, z)
    member x.XZX = V3i(x, z, x)
    member x.XZY = V3i(x, z, y)
    member x.XZZ = V3i(x, z, z)
    member x.YXX = V3i(y, x, x)
    member x.YXY = V3i(y, x, y)
    member x.YXZ = V3i(y, x, z)
    member x.YYX = V3i(y, y, x)
    member x.YYY = V3i(y, y, y)
    member x.YYZ = V3i(y, y, z)
    member x.YZX = V3i(y, z, x)
    member x.YZY = V3i(y, z, y)
    member x.YZZ = V3i(y, z, z)
    member x.ZXX = V3i(z, x, x)
    member x.ZXY = V3i(z, x, y)
    member x.ZXZ = V3i(z, x, z)
    member x.ZYX = V3i(z, y, x)
    member x.ZYY = V3i(z, y, y)
    member x.ZYZ = V3i(z, y, z)
    member x.ZZX = V3i(z, z, x)
    member x.ZZY = V3i(z, z, y)
    member x.ZZZ = V3i(z, z, z)
    static member Zero = V3i(0, 0, 0)
    static member One = V3i(1, 1, 1)
    static member OOO = V3i(0, 0, 0)
    static member OOI = V3i(0, 0, 1)
    static member OIO = V3i(0, 1, 0)
    static member OII = V3i(0, 1, 1)
    static member IOO = V3i(1, 0, 0)
    static member IOI = V3i(1, 0, 1)
    static member IIO = V3i(1, 1, 0)
    static member III = V3i(1, 1, 1)
    static member (~-) (v : V3i) = V3i(-v.X, -v.Y, -v.Z)
    static member (+) (l : V3i, r : V3i) = V3i(l.X + r.X, l.Y + r.Y, l.Z + r.Z)
    static member (-) (l : V3i, r : V3i) = V3i(l.X - r.X, l.Y - r.Y, l.Z - r.Z)
    static member (*) (l : V3i, r : V3i) = V3i(l.X * r.X, l.Y * r.Y, l.Z * r.Z)
    static member (/) (l : V3i, r : V3i) = V3i(l.X / r.X, l.Y / r.Y, l.Z / r.Z)
    static member (*) (l : V3i, r : int) = V3i(l.X * r, l.Y * r, l.Z * r)
    static member (/) (l : V3i, r : int) = V3i(l.X / r, l.Y / r, l.Z / r)
    static member (*) (l : int, r : V3i) = V3i(l * r.X, l * r.Y, l * r.Z)
    static member (/) (l : int, r : V3i) = V3i(l / r.X, l / r.Y, l / r.Z)
    static member Dot(l : V3i, r : V3i) = l.X * r.X + l.Y * r.Y + l.Z * r.Z
    member __.Dot(r : V3i) = x * r.X + y * r.Y + z * r.Z
    static member Cross(l : V3i, r : V3i) = V3i(l.Y * r.Z - l.Z * r.Y, l.Z * r.X - l.X * r.Z, l.X * r.Y - l.Y * r.X)
    member __.Cross(r : V3i) = V3i(y * r.Z - z * r.Y, z * r.X - x * r.Z, x * r.Y - y * r.X)
    member __.LengthSquared = x*x + y*y + z*z
    member __.Length = sqrt (float (x*x + y*y + z*z))
type V4i(x : int, y : int, z : int, w : int) = 
    member __.X = x
    member __.Y = y
    member __.Z = z
    member __.W = w
    member x.XX = V2i(x, x)
    member x.XY = V2i(x, y)
    member x.XZ = V2i(x, z)
    member x.XW = V2i(x, w)
    member x.YX = V2i(y, x)
    member x.YY = V2i(y, y)
    member x.YZ = V2i(y, z)
    member x.YW = V2i(y, w)
    member x.ZX = V2i(z, x)
    member x.ZY = V2i(z, y)
    member x.ZZ = V2i(z, z)
    member x.ZW = V2i(z, w)
    member x.WX = V2i(w, x)
    member x.WY = V2i(w, y)
    member x.WZ = V2i(w, z)
    member x.WW = V2i(w, w)
    member x.XXX = V3i(x, x, x)
    member x.XXY = V3i(x, x, y)
    member x.XXZ = V3i(x, x, z)
    member x.XXW = V3i(x, x, w)
    member x.XYX = V3i(x, y, x)
    member x.XYY = V3i(x, y, y)
    member x.XYZ = V3i(x, y, z)
    member x.XYW = V3i(x, y, w)
    member x.XZX = V3i(x, z, x)
    member x.XZY = V3i(x, z, y)
    member x.XZZ = V3i(x, z, z)
    member x.XZW = V3i(x, z, w)
    member x.XWX = V3i(x, w, x)
    member x.XWY = V3i(x, w, y)
    member x.XWZ = V3i(x, w, z)
    member x.XWW = V3i(x, w, w)
    member x.YXX = V3i(y, x, x)
    member x.YXY = V3i(y, x, y)
    member x.YXZ = V3i(y, x, z)
    member x.YXW = V3i(y, x, w)
    member x.YYX = V3i(y, y, x)
    member x.YYY = V3i(y, y, y)
    member x.YYZ = V3i(y, y, z)
    member x.YYW = V3i(y, y, w)
    member x.YZX = V3i(y, z, x)
    member x.YZY = V3i(y, z, y)
    member x.YZZ = V3i(y, z, z)
    member x.YZW = V3i(y, z, w)
    member x.YWX = V3i(y, w, x)
    member x.YWY = V3i(y, w, y)
    member x.YWZ = V3i(y, w, z)
    member x.YWW = V3i(y, w, w)
    member x.ZXX = V3i(z, x, x)
    member x.ZXY = V3i(z, x, y)
    member x.ZXZ = V3i(z, x, z)
    member x.ZXW = V3i(z, x, w)
    member x.ZYX = V3i(z, y, x)
    member x.ZYY = V3i(z, y, y)
    member x.ZYZ = V3i(z, y, z)
    member x.ZYW = V3i(z, y, w)
    member x.ZZX = V3i(z, z, x)
    member x.ZZY = V3i(z, z, y)
    member x.ZZZ = V3i(z, z, z)
    member x.ZZW = V3i(z, z, w)
    member x.ZWX = V3i(z, w, x)
    member x.ZWY = V3i(z, w, y)
    member x.ZWZ = V3i(z, w, z)
    member x.ZWW = V3i(z, w, w)
    member x.WXX = V3i(w, x, x)
    member x.WXY = V3i(w, x, y)
    member x.WXZ = V3i(w, x, z)
    member x.WXW = V3i(w, x, w)
    member x.WYX = V3i(w, y, x)
    member x.WYY = V3i(w, y, y)
    member x.WYZ = V3i(w, y, z)
    member x.WYW = V3i(w, y, w)
    member x.WZX = V3i(w, z, x)
    member x.WZY = V3i(w, z, y)
    member x.WZZ = V3i(w, z, z)
    member x.WZW = V3i(w, z, w)
    member x.WWX = V3i(w, w, x)
    member x.WWY = V3i(w, w, y)
    member x.WWZ = V3i(w, w, z)
    member x.WWW = V3i(w, w, w)
    member x.XXXX = V4i(x, x, x, x)
    member x.XXXY = V4i(x, x, x, y)
    member x.XXXZ = V4i(x, x, x, z)
    member x.XXXW = V4i(x, x, x, w)
    member x.XXYX = V4i(x, x, y, x)
    member x.XXYY = V4i(x, x, y, y)
    member x.XXYZ = V4i(x, x, y, z)
    member x.XXYW = V4i(x, x, y, w)
    member x.XXZX = V4i(x, x, z, x)
    member x.XXZY = V4i(x, x, z, y)
    member x.XXZZ = V4i(x, x, z, z)
    member x.XXZW = V4i(x, x, z, w)
    member x.XXWX = V4i(x, x, w, x)
    member x.XXWY = V4i(x, x, w, y)
    member x.XXWZ = V4i(x, x, w, z)
    member x.XXWW = V4i(x, x, w, w)
    member x.XYXX = V4i(x, y, x, x)
    member x.XYXY = V4i(x, y, x, y)
    member x.XYXZ = V4i(x, y, x, z)
    member x.XYXW = V4i(x, y, x, w)
    member x.XYYX = V4i(x, y, y, x)
    member x.XYYY = V4i(x, y, y, y)
    member x.XYYZ = V4i(x, y, y, z)
    member x.XYYW = V4i(x, y, y, w)
    member x.XYZX = V4i(x, y, z, x)
    member x.XYZY = V4i(x, y, z, y)
    member x.XYZZ = V4i(x, y, z, z)
    member x.XYZW = V4i(x, y, z, w)
    member x.XYWX = V4i(x, y, w, x)
    member x.XYWY = V4i(x, y, w, y)
    member x.XYWZ = V4i(x, y, w, z)
    member x.XYWW = V4i(x, y, w, w)
    member x.XZXX = V4i(x, z, x, x)
    member x.XZXY = V4i(x, z, x, y)
    member x.XZXZ = V4i(x, z, x, z)
    member x.XZXW = V4i(x, z, x, w)
    member x.XZYX = V4i(x, z, y, x)
    member x.XZYY = V4i(x, z, y, y)
    member x.XZYZ = V4i(x, z, y, z)
    member x.XZYW = V4i(x, z, y, w)
    member x.XZZX = V4i(x, z, z, x)
    member x.XZZY = V4i(x, z, z, y)
    member x.XZZZ = V4i(x, z, z, z)
    member x.XZZW = V4i(x, z, z, w)
    member x.XZWX = V4i(x, z, w, x)
    member x.XZWY = V4i(x, z, w, y)
    member x.XZWZ = V4i(x, z, w, z)
    member x.XZWW = V4i(x, z, w, w)
    member x.XWXX = V4i(x, w, x, x)
    member x.XWXY = V4i(x, w, x, y)
    member x.XWXZ = V4i(x, w, x, z)
    member x.XWXW = V4i(x, w, x, w)
    member x.XWYX = V4i(x, w, y, x)
    member x.XWYY = V4i(x, w, y, y)
    member x.XWYZ = V4i(x, w, y, z)
    member x.XWYW = V4i(x, w, y, w)
    member x.XWZX = V4i(x, w, z, x)
    member x.XWZY = V4i(x, w, z, y)
    member x.XWZZ = V4i(x, w, z, z)
    member x.XWZW = V4i(x, w, z, w)
    member x.XWWX = V4i(x, w, w, x)
    member x.XWWY = V4i(x, w, w, y)
    member x.XWWZ = V4i(x, w, w, z)
    member x.XWWW = V4i(x, w, w, w)
    member x.YXXX = V4i(y, x, x, x)
    member x.YXXY = V4i(y, x, x, y)
    member x.YXXZ = V4i(y, x, x, z)
    member x.YXXW = V4i(y, x, x, w)
    member x.YXYX = V4i(y, x, y, x)
    member x.YXYY = V4i(y, x, y, y)
    member x.YXYZ = V4i(y, x, y, z)
    member x.YXYW = V4i(y, x, y, w)
    member x.YXZX = V4i(y, x, z, x)
    member x.YXZY = V4i(y, x, z, y)
    member x.YXZZ = V4i(y, x, z, z)
    member x.YXZW = V4i(y, x, z, w)
    member x.YXWX = V4i(y, x, w, x)
    member x.YXWY = V4i(y, x, w, y)
    member x.YXWZ = V4i(y, x, w, z)
    member x.YXWW = V4i(y, x, w, w)
    member x.YYXX = V4i(y, y, x, x)
    member x.YYXY = V4i(y, y, x, y)
    member x.YYXZ = V4i(y, y, x, z)
    member x.YYXW = V4i(y, y, x, w)
    member x.YYYX = V4i(y, y, y, x)
    member x.YYYY = V4i(y, y, y, y)
    member x.YYYZ = V4i(y, y, y, z)
    member x.YYYW = V4i(y, y, y, w)
    member x.YYZX = V4i(y, y, z, x)
    member x.YYZY = V4i(y, y, z, y)
    member x.YYZZ = V4i(y, y, z, z)
    member x.YYZW = V4i(y, y, z, w)
    member x.YYWX = V4i(y, y, w, x)
    member x.YYWY = V4i(y, y, w, y)
    member x.YYWZ = V4i(y, y, w, z)
    member x.YYWW = V4i(y, y, w, w)
    member x.YZXX = V4i(y, z, x, x)
    member x.YZXY = V4i(y, z, x, y)
    member x.YZXZ = V4i(y, z, x, z)
    member x.YZXW = V4i(y, z, x, w)
    member x.YZYX = V4i(y, z, y, x)
    member x.YZYY = V4i(y, z, y, y)
    member x.YZYZ = V4i(y, z, y, z)
    member x.YZYW = V4i(y, z, y, w)
    member x.YZZX = V4i(y, z, z, x)
    member x.YZZY = V4i(y, z, z, y)
    member x.YZZZ = V4i(y, z, z, z)
    member x.YZZW = V4i(y, z, z, w)
    member x.YZWX = V4i(y, z, w, x)
    member x.YZWY = V4i(y, z, w, y)
    member x.YZWZ = V4i(y, z, w, z)
    member x.YZWW = V4i(y, z, w, w)
    member x.YWXX = V4i(y, w, x, x)
    member x.YWXY = V4i(y, w, x, y)
    member x.YWXZ = V4i(y, w, x, z)
    member x.YWXW = V4i(y, w, x, w)
    member x.YWYX = V4i(y, w, y, x)
    member x.YWYY = V4i(y, w, y, y)
    member x.YWYZ = V4i(y, w, y, z)
    member x.YWYW = V4i(y, w, y, w)
    member x.YWZX = V4i(y, w, z, x)
    member x.YWZY = V4i(y, w, z, y)
    member x.YWZZ = V4i(y, w, z, z)
    member x.YWZW = V4i(y, w, z, w)
    member x.YWWX = V4i(y, w, w, x)
    member x.YWWY = V4i(y, w, w, y)
    member x.YWWZ = V4i(y, w, w, z)
    member x.YWWW = V4i(y, w, w, w)
    member x.ZXXX = V4i(z, x, x, x)
    member x.ZXXY = V4i(z, x, x, y)
    member x.ZXXZ = V4i(z, x, x, z)
    member x.ZXXW = V4i(z, x, x, w)
    member x.ZXYX = V4i(z, x, y, x)
    member x.ZXYY = V4i(z, x, y, y)
    member x.ZXYZ = V4i(z, x, y, z)
    member x.ZXYW = V4i(z, x, y, w)
    member x.ZXZX = V4i(z, x, z, x)
    member x.ZXZY = V4i(z, x, z, y)
    member x.ZXZZ = V4i(z, x, z, z)
    member x.ZXZW = V4i(z, x, z, w)
    member x.ZXWX = V4i(z, x, w, x)
    member x.ZXWY = V4i(z, x, w, y)
    member x.ZXWZ = V4i(z, x, w, z)
    member x.ZXWW = V4i(z, x, w, w)
    member x.ZYXX = V4i(z, y, x, x)
    member x.ZYXY = V4i(z, y, x, y)
    member x.ZYXZ = V4i(z, y, x, z)
    member x.ZYXW = V4i(z, y, x, w)
    member x.ZYYX = V4i(z, y, y, x)
    member x.ZYYY = V4i(z, y, y, y)
    member x.ZYYZ = V4i(z, y, y, z)
    member x.ZYYW = V4i(z, y, y, w)
    member x.ZYZX = V4i(z, y, z, x)
    member x.ZYZY = V4i(z, y, z, y)
    member x.ZYZZ = V4i(z, y, z, z)
    member x.ZYZW = V4i(z, y, z, w)
    member x.ZYWX = V4i(z, y, w, x)
    member x.ZYWY = V4i(z, y, w, y)
    member x.ZYWZ = V4i(z, y, w, z)
    member x.ZYWW = V4i(z, y, w, w)
    member x.ZZXX = V4i(z, z, x, x)
    member x.ZZXY = V4i(z, z, x, y)
    member x.ZZXZ = V4i(z, z, x, z)
    member x.ZZXW = V4i(z, z, x, w)
    member x.ZZYX = V4i(z, z, y, x)
    member x.ZZYY = V4i(z, z, y, y)
    member x.ZZYZ = V4i(z, z, y, z)
    member x.ZZYW = V4i(z, z, y, w)
    member x.ZZZX = V4i(z, z, z, x)
    member x.ZZZY = V4i(z, z, z, y)
    member x.ZZZZ = V4i(z, z, z, z)
    member x.ZZZW = V4i(z, z, z, w)
    member x.ZZWX = V4i(z, z, w, x)
    member x.ZZWY = V4i(z, z, w, y)
    member x.ZZWZ = V4i(z, z, w, z)
    member x.ZZWW = V4i(z, z, w, w)
    member x.ZWXX = V4i(z, w, x, x)
    member x.ZWXY = V4i(z, w, x, y)
    member x.ZWXZ = V4i(z, w, x, z)
    member x.ZWXW = V4i(z, w, x, w)
    member x.ZWYX = V4i(z, w, y, x)
    member x.ZWYY = V4i(z, w, y, y)
    member x.ZWYZ = V4i(z, w, y, z)
    member x.ZWYW = V4i(z, w, y, w)
    member x.ZWZX = V4i(z, w, z, x)
    member x.ZWZY = V4i(z, w, z, y)
    member x.ZWZZ = V4i(z, w, z, z)
    member x.ZWZW = V4i(z, w, z, w)
    member x.ZWWX = V4i(z, w, w, x)
    member x.ZWWY = V4i(z, w, w, y)
    member x.ZWWZ = V4i(z, w, w, z)
    member x.ZWWW = V4i(z, w, w, w)
    member x.WXXX = V4i(w, x, x, x)
    member x.WXXY = V4i(w, x, x, y)
    member x.WXXZ = V4i(w, x, x, z)
    member x.WXXW = V4i(w, x, x, w)
    member x.WXYX = V4i(w, x, y, x)
    member x.WXYY = V4i(w, x, y, y)
    member x.WXYZ = V4i(w, x, y, z)
    member x.WXYW = V4i(w, x, y, w)
    member x.WXZX = V4i(w, x, z, x)
    member x.WXZY = V4i(w, x, z, y)
    member x.WXZZ = V4i(w, x, z, z)
    member x.WXZW = V4i(w, x, z, w)
    member x.WXWX = V4i(w, x, w, x)
    member x.WXWY = V4i(w, x, w, y)
    member x.WXWZ = V4i(w, x, w, z)
    member x.WXWW = V4i(w, x, w, w)
    member x.WYXX = V4i(w, y, x, x)
    member x.WYXY = V4i(w, y, x, y)
    member x.WYXZ = V4i(w, y, x, z)
    member x.WYXW = V4i(w, y, x, w)
    member x.WYYX = V4i(w, y, y, x)
    member x.WYYY = V4i(w, y, y, y)
    member x.WYYZ = V4i(w, y, y, z)
    member x.WYYW = V4i(w, y, y, w)
    member x.WYZX = V4i(w, y, z, x)
    member x.WYZY = V4i(w, y, z, y)
    member x.WYZZ = V4i(w, y, z, z)
    member x.WYZW = V4i(w, y, z, w)
    member x.WYWX = V4i(w, y, w, x)
    member x.WYWY = V4i(w, y, w, y)
    member x.WYWZ = V4i(w, y, w, z)
    member x.WYWW = V4i(w, y, w, w)
    member x.WZXX = V4i(w, z, x, x)
    member x.WZXY = V4i(w, z, x, y)
    member x.WZXZ = V4i(w, z, x, z)
    member x.WZXW = V4i(w, z, x, w)
    member x.WZYX = V4i(w, z, y, x)
    member x.WZYY = V4i(w, z, y, y)
    member x.WZYZ = V4i(w, z, y, z)
    member x.WZYW = V4i(w, z, y, w)
    member x.WZZX = V4i(w, z, z, x)
    member x.WZZY = V4i(w, z, z, y)
    member x.WZZZ = V4i(w, z, z, z)
    member x.WZZW = V4i(w, z, z, w)
    member x.WZWX = V4i(w, z, w, x)
    member x.WZWY = V4i(w, z, w, y)
    member x.WZWZ = V4i(w, z, w, z)
    member x.WZWW = V4i(w, z, w, w)
    member x.WWXX = V4i(w, w, x, x)
    member x.WWXY = V4i(w, w, x, y)
    member x.WWXZ = V4i(w, w, x, z)
    member x.WWXW = V4i(w, w, x, w)
    member x.WWYX = V4i(w, w, y, x)
    member x.WWYY = V4i(w, w, y, y)
    member x.WWYZ = V4i(w, w, y, z)
    member x.WWYW = V4i(w, w, y, w)
    member x.WWZX = V4i(w, w, z, x)
    member x.WWZY = V4i(w, w, z, y)
    member x.WWZZ = V4i(w, w, z, z)
    member x.WWZW = V4i(w, w, z, w)
    member x.WWWX = V4i(w, w, w, x)
    member x.WWWY = V4i(w, w, w, y)
    member x.WWWZ = V4i(w, w, w, z)
    member x.WWWW = V4i(w, w, w, w)
    static member Zero = V4i(0, 0, 0, 0)
    static member One = V4i(1, 1, 1, 1)
    static member OOOO = V4i(0, 0, 0, 0)
    static member OOOI = V4i(0, 0, 0, 1)
    static member OOIO = V4i(0, 0, 1, 0)
    static member OOII = V4i(0, 0, 1, 1)
    static member OIOO = V4i(0, 1, 0, 0)
    static member OIOI = V4i(0, 1, 0, 1)
    static member OIIO = V4i(0, 1, 1, 0)
    static member OIII = V4i(0, 1, 1, 1)
    static member IOOO = V4i(1, 0, 0, 0)
    static member IOOI = V4i(1, 0, 0, 1)
    static member IOIO = V4i(1, 0, 1, 0)
    static member IOII = V4i(1, 0, 1, 1)
    static member IIOO = V4i(1, 1, 0, 0)
    static member IIOI = V4i(1, 1, 0, 1)
    static member IIIO = V4i(1, 1, 1, 0)
    static member IIII = V4i(1, 1, 1, 1)
    static member (~-) (v : V4i) = V4i(-v.X, -v.Y, -v.Z, -v.W)
    static member (+) (l : V4i, r : V4i) = V4i(l.X + r.X, l.Y + r.Y, l.Z + r.Z, l.W + r.W)
    static member (-) (l : V4i, r : V4i) = V4i(l.X - r.X, l.Y - r.Y, l.Z - r.Z, l.W - r.W)
    static member (*) (l : V4i, r : V4i) = V4i(l.X * r.X, l.Y * r.Y, l.Z * r.Z, l.W * r.W)
    static member (/) (l : V4i, r : V4i) = V4i(l.X / r.X, l.Y / r.Y, l.Z / r.Z, l.W / r.W)
    static member (*) (l : V4i, r : int) = V4i(l.X * r, l.Y * r, l.Z * r, l.W * r)
    static member (/) (l : V4i, r : int) = V4i(l.X / r, l.Y / r, l.Z / r, l.W / r)
    static member (*) (l : int, r : V4i) = V4i(l * r.X, l * r.Y, l * r.Z, l * r.W)
    static member (/) (l : int, r : V4i) = V4i(l / r.X, l / r.Y, l / r.Z, l / r.W)
    static member Dot(l : V4i, r : V4i) = l.X * r.X + l.Y * r.Y + l.Z * r.Z + l.W * r.W
    member __.Dot(r : V4i) = x * r.X + y * r.Y + z * r.Z + w * r.W
    member __.LengthSquared = x*x + y*y + z*z + w*w
    member __.Length = sqrt (float (x*x + y*y + z*z + w*w))
type V2d(x : float, y : float) = 
    member __.X = x
    member __.Y = y
    member x.XX = V2d(x, x)
    member x.XY = V2d(x, y)
    member x.YX = V2d(y, x)
    member x.YY = V2d(y, y)
    static member Zero = V2d(0.0, 0.0)
    static member One = V2d(1.0, 1.0)
    static member OO = V2d(0.0, 0.0)
    static member OI = V2d(0.0, 1.0)
    static member IO = V2d(1.0, 0.0)
    static member II = V2d(1.0, 1.0)
    static member (~-) (v : V2d) = V2d(-v.X, -v.Y)
    static member (+) (l : V2d, r : V2d) = V2d(l.X + r.X, l.Y + r.Y)
    static member (-) (l : V2d, r : V2d) = V2d(l.X - r.X, l.Y - r.Y)
    static member (*) (l : V2d, r : V2d) = V2d(l.X * r.X, l.Y * r.Y)
    static member (/) (l : V2d, r : V2d) = V2d(l.X / r.X, l.Y / r.Y)
    static member (*) (l : V2d, r : float) = V2d(l.X * r, l.Y * r)
    static member (/) (l : V2d, r : float) = V2d(l.X / r, l.Y / r)
    static member (*) (l : float, r : V2d) = V2d(l * r.X, l * r.Y)
    static member (/) (l : float, r : V2d) = V2d(l / r.X, l / r.Y)
    static member Dot(l : V2d, r : V2d) = l.X * r.X + l.Y * r.Y
    member __.Dot(r : V2d) = x * r.X + y * r.Y
    member __.LengthSquared = x*x + y*y
    member __.Length = sqrt (x*x + y*y)
type V3d(x : float, y : float, z : float) = 
    member __.X = x
    member __.Y = y
    member __.Z = z
    member x.XX = V2d(x, x)
    member x.XY = V2d(x, y)
    member x.XZ = V2d(x, z)
    member x.YX = V2d(y, x)
    member x.YY = V2d(y, y)
    member x.YZ = V2d(y, z)
    member x.ZX = V2d(z, x)
    member x.ZY = V2d(z, y)
    member x.ZZ = V2d(z, z)
    member x.XXX = V3d(x, x, x)
    member x.XXY = V3d(x, x, y)
    member x.XXZ = V3d(x, x, z)
    member x.XYX = V3d(x, y, x)
    member x.XYY = V3d(x, y, y)
    member x.XYZ = V3d(x, y, z)
    member x.XZX = V3d(x, z, x)
    member x.XZY = V3d(x, z, y)
    member x.XZZ = V3d(x, z, z)
    member x.YXX = V3d(y, x, x)
    member x.YXY = V3d(y, x, y)
    member x.YXZ = V3d(y, x, z)
    member x.YYX = V3d(y, y, x)
    member x.YYY = V3d(y, y, y)
    member x.YYZ = V3d(y, y, z)
    member x.YZX = V3d(y, z, x)
    member x.YZY = V3d(y, z, y)
    member x.YZZ = V3d(y, z, z)
    member x.ZXX = V3d(z, x, x)
    member x.ZXY = V3d(z, x, y)
    member x.ZXZ = V3d(z, x, z)
    member x.ZYX = V3d(z, y, x)
    member x.ZYY = V3d(z, y, y)
    member x.ZYZ = V3d(z, y, z)
    member x.ZZX = V3d(z, z, x)
    member x.ZZY = V3d(z, z, y)
    member x.ZZZ = V3d(z, z, z)
    static member Zero = V3d(0.0, 0.0, 0.0)
    static member One = V3d(1.0, 1.0, 1.0)
    static member OOO = V3d(0.0, 0.0, 0.0)
    static member OOI = V3d(0.0, 0.0, 1.0)
    static member OIO = V3d(0.0, 1.0, 0.0)
    static member OII = V3d(0.0, 1.0, 1.0)
    static member IOO = V3d(1.0, 0.0, 0.0)
    static member IOI = V3d(1.0, 0.0, 1.0)
    static member IIO = V3d(1.0, 1.0, 0.0)
    static member III = V3d(1.0, 1.0, 1.0)
    static member (~-) (v : V3d) = V3d(-v.X, -v.Y, -v.Z)
    static member (+) (l : V3d, r : V3d) = V3d(l.X + r.X, l.Y + r.Y, l.Z + r.Z)
    static member (-) (l : V3d, r : V3d) = V3d(l.X - r.X, l.Y - r.Y, l.Z - r.Z)
    static member (*) (l : V3d, r : V3d) = V3d(l.X * r.X, l.Y * r.Y, l.Z * r.Z)
    static member (/) (l : V3d, r : V3d) = V3d(l.X / r.X, l.Y / r.Y, l.Z / r.Z)
    static member (*) (l : V3d, r : float) = V3d(l.X * r, l.Y * r, l.Z * r)
    static member (/) (l : V3d, r : float) = V3d(l.X / r, l.Y / r, l.Z / r)
    static member (*) (l : float, r : V3d) = V3d(l * r.X, l * r.Y, l * r.Z)
    static member (/) (l : float, r : V3d) = V3d(l / r.X, l / r.Y, l / r.Z)
    static member Dot(l : V3d, r : V3d) = l.X * r.X + l.Y * r.Y + l.Z * r.Z
    member __.Dot(r : V3d) = x * r.X + y * r.Y + z * r.Z
    static member Cross(l : V3d, r : V3d) = V3d(l.Y * r.Z - l.Z * r.Y, l.Z * r.X - l.X * r.Z, l.X * r.Y - l.Y * r.X)
    member __.Cross(r : V3d) = V3d(y * r.Z - z * r.Y, z * r.X - x * r.Z, x * r.Y - y * r.X)
    member __.LengthSquared = x*x + y*y + z*z
    member __.Length = sqrt (x*x + y*y + z*z)
type V4d(x : float, y : float, z : float, w : float) = 
    member __.X = x
    member __.Y = y
    member __.Z = z
    member __.W = w
    member x.XX = V2d(x, x)
    member x.XY = V2d(x, y)
    member x.XZ = V2d(x, z)
    member x.XW = V2d(x, w)
    member x.YX = V2d(y, x)
    member x.YY = V2d(y, y)
    member x.YZ = V2d(y, z)
    member x.YW = V2d(y, w)
    member x.ZX = V2d(z, x)
    member x.ZY = V2d(z, y)
    member x.ZZ = V2d(z, z)
    member x.ZW = V2d(z, w)
    member x.WX = V2d(w, x)
    member x.WY = V2d(w, y)
    member x.WZ = V2d(w, z)
    member x.WW = V2d(w, w)
    member x.XXX = V3d(x, x, x)
    member x.XXY = V3d(x, x, y)
    member x.XXZ = V3d(x, x, z)
    member x.XXW = V3d(x, x, w)
    member x.XYX = V3d(x, y, x)
    member x.XYY = V3d(x, y, y)
    member x.XYZ = V3d(x, y, z)
    member x.XYW = V3d(x, y, w)
    member x.XZX = V3d(x, z, x)
    member x.XZY = V3d(x, z, y)
    member x.XZZ = V3d(x, z, z)
    member x.XZW = V3d(x, z, w)
    member x.XWX = V3d(x, w, x)
    member x.XWY = V3d(x, w, y)
    member x.XWZ = V3d(x, w, z)
    member x.XWW = V3d(x, w, w)
    member x.YXX = V3d(y, x, x)
    member x.YXY = V3d(y, x, y)
    member x.YXZ = V3d(y, x, z)
    member x.YXW = V3d(y, x, w)
    member x.YYX = V3d(y, y, x)
    member x.YYY = V3d(y, y, y)
    member x.YYZ = V3d(y, y, z)
    member x.YYW = V3d(y, y, w)
    member x.YZX = V3d(y, z, x)
    member x.YZY = V3d(y, z, y)
    member x.YZZ = V3d(y, z, z)
    member x.YZW = V3d(y, z, w)
    member x.YWX = V3d(y, w, x)
    member x.YWY = V3d(y, w, y)
    member x.YWZ = V3d(y, w, z)
    member x.YWW = V3d(y, w, w)
    member x.ZXX = V3d(z, x, x)
    member x.ZXY = V3d(z, x, y)
    member x.ZXZ = V3d(z, x, z)
    member x.ZXW = V3d(z, x, w)
    member x.ZYX = V3d(z, y, x)
    member x.ZYY = V3d(z, y, y)
    member x.ZYZ = V3d(z, y, z)
    member x.ZYW = V3d(z, y, w)
    member x.ZZX = V3d(z, z, x)
    member x.ZZY = V3d(z, z, y)
    member x.ZZZ = V3d(z, z, z)
    member x.ZZW = V3d(z, z, w)
    member x.ZWX = V3d(z, w, x)
    member x.ZWY = V3d(z, w, y)
    member x.ZWZ = V3d(z, w, z)
    member x.ZWW = V3d(z, w, w)
    member x.WXX = V3d(w, x, x)
    member x.WXY = V3d(w, x, y)
    member x.WXZ = V3d(w, x, z)
    member x.WXW = V3d(w, x, w)
    member x.WYX = V3d(w, y, x)
    member x.WYY = V3d(w, y, y)
    member x.WYZ = V3d(w, y, z)
    member x.WYW = V3d(w, y, w)
    member x.WZX = V3d(w, z, x)
    member x.WZY = V3d(w, z, y)
    member x.WZZ = V3d(w, z, z)
    member x.WZW = V3d(w, z, w)
    member x.WWX = V3d(w, w, x)
    member x.WWY = V3d(w, w, y)
    member x.WWZ = V3d(w, w, z)
    member x.WWW = V3d(w, w, w)
    member x.XXXX = V4d(x, x, x, x)
    member x.XXXY = V4d(x, x, x, y)
    member x.XXXZ = V4d(x, x, x, z)
    member x.XXXW = V4d(x, x, x, w)
    member x.XXYX = V4d(x, x, y, x)
    member x.XXYY = V4d(x, x, y, y)
    member x.XXYZ = V4d(x, x, y, z)
    member x.XXYW = V4d(x, x, y, w)
    member x.XXZX = V4d(x, x, z, x)
    member x.XXZY = V4d(x, x, z, y)
    member x.XXZZ = V4d(x, x, z, z)
    member x.XXZW = V4d(x, x, z, w)
    member x.XXWX = V4d(x, x, w, x)
    member x.XXWY = V4d(x, x, w, y)
    member x.XXWZ = V4d(x, x, w, z)
    member x.XXWW = V4d(x, x, w, w)
    member x.XYXX = V4d(x, y, x, x)
    member x.XYXY = V4d(x, y, x, y)
    member x.XYXZ = V4d(x, y, x, z)
    member x.XYXW = V4d(x, y, x, w)
    member x.XYYX = V4d(x, y, y, x)
    member x.XYYY = V4d(x, y, y, y)
    member x.XYYZ = V4d(x, y, y, z)
    member x.XYYW = V4d(x, y, y, w)
    member x.XYZX = V4d(x, y, z, x)
    member x.XYZY = V4d(x, y, z, y)
    member x.XYZZ = V4d(x, y, z, z)
    member x.XYZW = V4d(x, y, z, w)
    member x.XYWX = V4d(x, y, w, x)
    member x.XYWY = V4d(x, y, w, y)
    member x.XYWZ = V4d(x, y, w, z)
    member x.XYWW = V4d(x, y, w, w)
    member x.XZXX = V4d(x, z, x, x)
    member x.XZXY = V4d(x, z, x, y)
    member x.XZXZ = V4d(x, z, x, z)
    member x.XZXW = V4d(x, z, x, w)
    member x.XZYX = V4d(x, z, y, x)
    member x.XZYY = V4d(x, z, y, y)
    member x.XZYZ = V4d(x, z, y, z)
    member x.XZYW = V4d(x, z, y, w)
    member x.XZZX = V4d(x, z, z, x)
    member x.XZZY = V4d(x, z, z, y)
    member x.XZZZ = V4d(x, z, z, z)
    member x.XZZW = V4d(x, z, z, w)
    member x.XZWX = V4d(x, z, w, x)
    member x.XZWY = V4d(x, z, w, y)
    member x.XZWZ = V4d(x, z, w, z)
    member x.XZWW = V4d(x, z, w, w)
    member x.XWXX = V4d(x, w, x, x)
    member x.XWXY = V4d(x, w, x, y)
    member x.XWXZ = V4d(x, w, x, z)
    member x.XWXW = V4d(x, w, x, w)
    member x.XWYX = V4d(x, w, y, x)
    member x.XWYY = V4d(x, w, y, y)
    member x.XWYZ = V4d(x, w, y, z)
    member x.XWYW = V4d(x, w, y, w)
    member x.XWZX = V4d(x, w, z, x)
    member x.XWZY = V4d(x, w, z, y)
    member x.XWZZ = V4d(x, w, z, z)
    member x.XWZW = V4d(x, w, z, w)
    member x.XWWX = V4d(x, w, w, x)
    member x.XWWY = V4d(x, w, w, y)
    member x.XWWZ = V4d(x, w, w, z)
    member x.XWWW = V4d(x, w, w, w)
    member x.YXXX = V4d(y, x, x, x)
    member x.YXXY = V4d(y, x, x, y)
    member x.YXXZ = V4d(y, x, x, z)
    member x.YXXW = V4d(y, x, x, w)
    member x.YXYX = V4d(y, x, y, x)
    member x.YXYY = V4d(y, x, y, y)
    member x.YXYZ = V4d(y, x, y, z)
    member x.YXYW = V4d(y, x, y, w)
    member x.YXZX = V4d(y, x, z, x)
    member x.YXZY = V4d(y, x, z, y)
    member x.YXZZ = V4d(y, x, z, z)
    member x.YXZW = V4d(y, x, z, w)
    member x.YXWX = V4d(y, x, w, x)
    member x.YXWY = V4d(y, x, w, y)
    member x.YXWZ = V4d(y, x, w, z)
    member x.YXWW = V4d(y, x, w, w)
    member x.YYXX = V4d(y, y, x, x)
    member x.YYXY = V4d(y, y, x, y)
    member x.YYXZ = V4d(y, y, x, z)
    member x.YYXW = V4d(y, y, x, w)
    member x.YYYX = V4d(y, y, y, x)
    member x.YYYY = V4d(y, y, y, y)
    member x.YYYZ = V4d(y, y, y, z)
    member x.YYYW = V4d(y, y, y, w)
    member x.YYZX = V4d(y, y, z, x)
    member x.YYZY = V4d(y, y, z, y)
    member x.YYZZ = V4d(y, y, z, z)
    member x.YYZW = V4d(y, y, z, w)
    member x.YYWX = V4d(y, y, w, x)
    member x.YYWY = V4d(y, y, w, y)
    member x.YYWZ = V4d(y, y, w, z)
    member x.YYWW = V4d(y, y, w, w)
    member x.YZXX = V4d(y, z, x, x)
    member x.YZXY = V4d(y, z, x, y)
    member x.YZXZ = V4d(y, z, x, z)
    member x.YZXW = V4d(y, z, x, w)
    member x.YZYX = V4d(y, z, y, x)
    member x.YZYY = V4d(y, z, y, y)
    member x.YZYZ = V4d(y, z, y, z)
    member x.YZYW = V4d(y, z, y, w)
    member x.YZZX = V4d(y, z, z, x)
    member x.YZZY = V4d(y, z, z, y)
    member x.YZZZ = V4d(y, z, z, z)
    member x.YZZW = V4d(y, z, z, w)
    member x.YZWX = V4d(y, z, w, x)
    member x.YZWY = V4d(y, z, w, y)
    member x.YZWZ = V4d(y, z, w, z)
    member x.YZWW = V4d(y, z, w, w)
    member x.YWXX = V4d(y, w, x, x)
    member x.YWXY = V4d(y, w, x, y)
    member x.YWXZ = V4d(y, w, x, z)
    member x.YWXW = V4d(y, w, x, w)
    member x.YWYX = V4d(y, w, y, x)
    member x.YWYY = V4d(y, w, y, y)
    member x.YWYZ = V4d(y, w, y, z)
    member x.YWYW = V4d(y, w, y, w)
    member x.YWZX = V4d(y, w, z, x)
    member x.YWZY = V4d(y, w, z, y)
    member x.YWZZ = V4d(y, w, z, z)
    member x.YWZW = V4d(y, w, z, w)
    member x.YWWX = V4d(y, w, w, x)
    member x.YWWY = V4d(y, w, w, y)
    member x.YWWZ = V4d(y, w, w, z)
    member x.YWWW = V4d(y, w, w, w)
    member x.ZXXX = V4d(z, x, x, x)
    member x.ZXXY = V4d(z, x, x, y)
    member x.ZXXZ = V4d(z, x, x, z)
    member x.ZXXW = V4d(z, x, x, w)
    member x.ZXYX = V4d(z, x, y, x)
    member x.ZXYY = V4d(z, x, y, y)
    member x.ZXYZ = V4d(z, x, y, z)
    member x.ZXYW = V4d(z, x, y, w)
    member x.ZXZX = V4d(z, x, z, x)
    member x.ZXZY = V4d(z, x, z, y)
    member x.ZXZZ = V4d(z, x, z, z)
    member x.ZXZW = V4d(z, x, z, w)
    member x.ZXWX = V4d(z, x, w, x)
    member x.ZXWY = V4d(z, x, w, y)
    member x.ZXWZ = V4d(z, x, w, z)
    member x.ZXWW = V4d(z, x, w, w)
    member x.ZYXX = V4d(z, y, x, x)
    member x.ZYXY = V4d(z, y, x, y)
    member x.ZYXZ = V4d(z, y, x, z)
    member x.ZYXW = V4d(z, y, x, w)
    member x.ZYYX = V4d(z, y, y, x)
    member x.ZYYY = V4d(z, y, y, y)
    member x.ZYYZ = V4d(z, y, y, z)
    member x.ZYYW = V4d(z, y, y, w)
    member x.ZYZX = V4d(z, y, z, x)
    member x.ZYZY = V4d(z, y, z, y)
    member x.ZYZZ = V4d(z, y, z, z)
    member x.ZYZW = V4d(z, y, z, w)
    member x.ZYWX = V4d(z, y, w, x)
    member x.ZYWY = V4d(z, y, w, y)
    member x.ZYWZ = V4d(z, y, w, z)
    member x.ZYWW = V4d(z, y, w, w)
    member x.ZZXX = V4d(z, z, x, x)
    member x.ZZXY = V4d(z, z, x, y)
    member x.ZZXZ = V4d(z, z, x, z)
    member x.ZZXW = V4d(z, z, x, w)
    member x.ZZYX = V4d(z, z, y, x)
    member x.ZZYY = V4d(z, z, y, y)
    member x.ZZYZ = V4d(z, z, y, z)
    member x.ZZYW = V4d(z, z, y, w)
    member x.ZZZX = V4d(z, z, z, x)
    member x.ZZZY = V4d(z, z, z, y)
    member x.ZZZZ = V4d(z, z, z, z)
    member x.ZZZW = V4d(z, z, z, w)
    member x.ZZWX = V4d(z, z, w, x)
    member x.ZZWY = V4d(z, z, w, y)
    member x.ZZWZ = V4d(z, z, w, z)
    member x.ZZWW = V4d(z, z, w, w)
    member x.ZWXX = V4d(z, w, x, x)
    member x.ZWXY = V4d(z, w, x, y)
    member x.ZWXZ = V4d(z, w, x, z)
    member x.ZWXW = V4d(z, w, x, w)
    member x.ZWYX = V4d(z, w, y, x)
    member x.ZWYY = V4d(z, w, y, y)
    member x.ZWYZ = V4d(z, w, y, z)
    member x.ZWYW = V4d(z, w, y, w)
    member x.ZWZX = V4d(z, w, z, x)
    member x.ZWZY = V4d(z, w, z, y)
    member x.ZWZZ = V4d(z, w, z, z)
    member x.ZWZW = V4d(z, w, z, w)
    member x.ZWWX = V4d(z, w, w, x)
    member x.ZWWY = V4d(z, w, w, y)
    member x.ZWWZ = V4d(z, w, w, z)
    member x.ZWWW = V4d(z, w, w, w)
    member x.WXXX = V4d(w, x, x, x)
    member x.WXXY = V4d(w, x, x, y)
    member x.WXXZ = V4d(w, x, x, z)
    member x.WXXW = V4d(w, x, x, w)
    member x.WXYX = V4d(w, x, y, x)
    member x.WXYY = V4d(w, x, y, y)
    member x.WXYZ = V4d(w, x, y, z)
    member x.WXYW = V4d(w, x, y, w)
    member x.WXZX = V4d(w, x, z, x)
    member x.WXZY = V4d(w, x, z, y)
    member x.WXZZ = V4d(w, x, z, z)
    member x.WXZW = V4d(w, x, z, w)
    member x.WXWX = V4d(w, x, w, x)
    member x.WXWY = V4d(w, x, w, y)
    member x.WXWZ = V4d(w, x, w, z)
    member x.WXWW = V4d(w, x, w, w)
    member x.WYXX = V4d(w, y, x, x)
    member x.WYXY = V4d(w, y, x, y)
    member x.WYXZ = V4d(w, y, x, z)
    member x.WYXW = V4d(w, y, x, w)
    member x.WYYX = V4d(w, y, y, x)
    member x.WYYY = V4d(w, y, y, y)
    member x.WYYZ = V4d(w, y, y, z)
    member x.WYYW = V4d(w, y, y, w)
    member x.WYZX = V4d(w, y, z, x)
    member x.WYZY = V4d(w, y, z, y)
    member x.WYZZ = V4d(w, y, z, z)
    member x.WYZW = V4d(w, y, z, w)
    member x.WYWX = V4d(w, y, w, x)
    member x.WYWY = V4d(w, y, w, y)
    member x.WYWZ = V4d(w, y, w, z)
    member x.WYWW = V4d(w, y, w, w)
    member x.WZXX = V4d(w, z, x, x)
    member x.WZXY = V4d(w, z, x, y)
    member x.WZXZ = V4d(w, z, x, z)
    member x.WZXW = V4d(w, z, x, w)
    member x.WZYX = V4d(w, z, y, x)
    member x.WZYY = V4d(w, z, y, y)
    member x.WZYZ = V4d(w, z, y, z)
    member x.WZYW = V4d(w, z, y, w)
    member x.WZZX = V4d(w, z, z, x)
    member x.WZZY = V4d(w, z, z, y)
    member x.WZZZ = V4d(w, z, z, z)
    member x.WZZW = V4d(w, z, z, w)
    member x.WZWX = V4d(w, z, w, x)
    member x.WZWY = V4d(w, z, w, y)
    member x.WZWZ = V4d(w, z, w, z)
    member x.WZWW = V4d(w, z, w, w)
    member x.WWXX = V4d(w, w, x, x)
    member x.WWXY = V4d(w, w, x, y)
    member x.WWXZ = V4d(w, w, x, z)
    member x.WWXW = V4d(w, w, x, w)
    member x.WWYX = V4d(w, w, y, x)
    member x.WWYY = V4d(w, w, y, y)
    member x.WWYZ = V4d(w, w, y, z)
    member x.WWYW = V4d(w, w, y, w)
    member x.WWZX = V4d(w, w, z, x)
    member x.WWZY = V4d(w, w, z, y)
    member x.WWZZ = V4d(w, w, z, z)
    member x.WWZW = V4d(w, w, z, w)
    member x.WWWX = V4d(w, w, w, x)
    member x.WWWY = V4d(w, w, w, y)
    member x.WWWZ = V4d(w, w, w, z)
    member x.WWWW = V4d(w, w, w, w)
    static member Zero = V4d(0.0, 0.0, 0.0, 0.0)
    static member One = V4d(1.0, 1.0, 1.0, 1.0)
    static member OOOO = V4d(0.0, 0.0, 0.0, 0.0)
    static member OOOI = V4d(0.0, 0.0, 0.0, 1.0)
    static member OOIO = V4d(0.0, 0.0, 1.0, 0.0)
    static member OOII = V4d(0.0, 0.0, 1.0, 1.0)
    static member OIOO = V4d(0.0, 1.0, 0.0, 0.0)
    static member OIOI = V4d(0.0, 1.0, 0.0, 1.0)
    static member OIIO = V4d(0.0, 1.0, 1.0, 0.0)
    static member OIII = V4d(0.0, 1.0, 1.0, 1.0)
    static member IOOO = V4d(1.0, 0.0, 0.0, 0.0)
    static member IOOI = V4d(1.0, 0.0, 0.0, 1.0)
    static member IOIO = V4d(1.0, 0.0, 1.0, 0.0)
    static member IOII = V4d(1.0, 0.0, 1.0, 1.0)
    static member IIOO = V4d(1.0, 1.0, 0.0, 0.0)
    static member IIOI = V4d(1.0, 1.0, 0.0, 1.0)
    static member IIIO = V4d(1.0, 1.0, 1.0, 0.0)
    static member IIII = V4d(1.0, 1.0, 1.0, 1.0)
    static member (~-) (v : V4d) = V4d(-v.X, -v.Y, -v.Z, -v.W)
    static member (+) (l : V4d, r : V4d) = V4d(l.X + r.X, l.Y + r.Y, l.Z + r.Z, l.W + r.W)
    static member (-) (l : V4d, r : V4d) = V4d(l.X - r.X, l.Y - r.Y, l.Z - r.Z, l.W - r.W)
    static member (*) (l : V4d, r : V4d) = V4d(l.X * r.X, l.Y * r.Y, l.Z * r.Z, l.W * r.W)
    static member (/) (l : V4d, r : V4d) = V4d(l.X / r.X, l.Y / r.Y, l.Z / r.Z, l.W / r.W)
    static member (*) (l : V4d, r : float) = V4d(l.X * r, l.Y * r, l.Z * r, l.W * r)
    static member (/) (l : V4d, r : float) = V4d(l.X / r, l.Y / r, l.Z / r, l.W / r)
    static member (*) (l : float, r : V4d) = V4d(l * r.X, l * r.Y, l * r.Z, l * r.W)
    static member (/) (l : float, r : V4d) = V4d(l / r.X, l / r.Y, l / r.Z, l / r.W)
    static member Dot(l : V4d, r : V4d) = l.X * r.X + l.Y * r.Y + l.Z * r.Z + l.W * r.W
    member __.Dot(r : V4d) = x * r.X + y * r.Y + z * r.Z + w * r.W
    member __.LengthSquared = x*x + y*y + z*z + w*w
    member __.Length = sqrt (x*x + y*y + z*z + w*w)
